[tool:pytest]
# Pytest configuration for BrainSAIT HIPAA-Compliant Communication Tests

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --asyncio-mode=auto
    --cov=services
    --cov=utils
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=90
    --durations=10
    --maxfail=5

# Test markers
markers =
    hipaa: HIPAA compliance tests
    arabic: Arabic language and localization tests  
    integration: Integration tests
    unit: Unit tests
    api: API endpoint tests
    workflow: Workflow and orchestration tests
    encryption: Encryption and security tests
    performance: Performance and load tests
    slow: Slow running tests (> 5 seconds)
    security: Security vulnerability tests
    audit: Audit logging tests
    consent: Consent management tests
    phi: PHI detection and masking tests
    emergency: Emergency workflow tests
    twilio: Twilio service integration tests
    compliance: General compliance tests
    frontend: Frontend component tests

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*
    error::ResourceWarning

# Asyncio configuration
asyncio_mode = auto

# Timeout settings
timeout = 300
timeout_method = thread

# Test output
console_output_style = progress
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
[coverage:run]
source = services, utils
omit = 
    */tests/*
    */test_*
    */conftest.py
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod